/*
 * AnishBestPingPongerAliveButNotAsGoodAsMax.h
 *
 * Auto generated by Maxim Integrated, supporting revision
 * Search for #BYHAND for flags on special cases to fix by hand
 * #BYHAND width doesn't match:
 * (this is usually when a bit has shorthand or formulaic descriptions)
 * #BYHAND width >= 5:
 */
#ifndef __MAX98927_REGISTERDEFS_H
#define __MAX98927_REGISTERDEFS_H
#include <sound/maxim_dsm.h>

#define MAX98927L 0
#define MAX98927R 1
#define MAX98927B 2

#define MAX_TRY_COUNT 3

enum {
	/* Interrupt Raw 1 (Address 0x0001) */
	MAX98927_IRQ_RAW_1 = 0x0001,
	MAX98927_IRQ_RAW_1_BDE_ACTIVE_END_RAW = (0x1 << 0),
	MAX98927_IRQ_RAW_1_BDE_ACTIVE_BGN_RAW = (0x1 << 1),
	MAX98927_IRQ_RAW_1_BDE_LVL_CHANGE_RAW = (0x1 << 2),
	MAX98927_IRQ_RAW_1_BDE_L8_RAW = (0x1 << 3),
	MAX98927_IRQ_RAW_1_THERMWARN_END_RAW = (0x1 << 4),
	MAX98927_IRQ_RAW_1_THERMWARN_START_RAW = (0x1 << 5),
	MAX98927_IRQ_RAW_1_THERMSHDN_END_RAW = (0x1 << 6),
	MAX98927_IRQ_RAW_1_THERMSHDN_START_RAW = (0x1 << 7),

	/* Interrupt Raw 2 (Address 0x0002) */
	MAX98927_IRQ_RAW_2 = 0x0002,
	MAX98927_IRQ_RAW_2_WATCHDOGWARN_RAW = (0x1 << 0),
	MAX98927_IRQ_RAW_2_WATCHDOGFAIL_RAW = (0x1 << 1),
	MAX98927_IRQ_RAW_2_BOOSTCURRLIM_RAW = (0x1 << 2),
	MAX98927_IRQ_RAW_2_CLKSTOP_RAW = (0x1 << 3),
	MAX98927_IRQ_RAW_2_CLKSTART_RAW = (0x1 << 4),
	MAX98927_IRQ_RAW_2_MEASADC_END_RAW = (0x1 << 5),
	MAX98927_IRQ_RAW_2_PWRDN_DONE_RAW = (0x1 << 6),
	MAX98927_IRQ_RAW_2_PWRUP_DONE_RAW = (0x1 << 7),

	/* Interrup Raw 3 (Address 0x0003) */
	MAX98927_IRQ_RAW_3 = 0x0003,
	MAX98927_IRQ_RAW_3_PWRUP_FAIL_RAW = (0x1 << 0),
	MAX98927_IRQ_RAW_3_AUTH_DONE_RAW = (0x1 << 1),
	MAX98927_IRQ_RAW_3_SPK_OVC_RAW = (0x1 << 2),
	MAX98927_IRQ_RAW_3_BST_UVLO_RAW = (0x1 << 3),

	/* Interrupt State 1 (Address 0x0004) */
	MAX98927_IRQ_STATE_1 = 0x0004,
	MAX98927_IRQ_STATE_1_BDE_ACTIVE_END_STATE = (0x1 << 0),
	MAX98927_IRQ_STATE_1_BDE_ACTIVE_BGN_STATE = (0x1 << 1),
	MAX98927_IRQ_STATE_1_BDE_LVL_CHANGE_STATE = (0x1 << 2),
	MAX98927_IRQ_STATE_1_BDE_L8_STATE = (0x1 << 3),
	MAX98927_IRQ_STATE_1_THERMWARN_END_STATE = (0x1 << 4),
	MAX98927_IRQ_STATE_1_THERMWARN_START_STATE = (0x1 << 5),
	MAX98927_IRQ_STATE_1_THERMSHDN_END_STATE = (0x1 << 6),
	MAX98927_IRQ_STATE_1_THERMSHDN_START_STATE = (0x1 << 7),

	/* Interrupt State 2 (Address 0x0005) */
	MAX98927_IRQ_STATE_2 = 0x0005,
	MAX98927_IRQ_STATE_2_WATCHDOGWARN_STATE = (0x1 << 0),
	MAX98927_IRQ_STATE_2_WATCHDOGFAIL_STATE = (0x1 << 1),
	MAX98927_IRQ_STATE_2_BOOSTCURRLIM_STATE = (0x1 << 2),
	MAX98927_IRQ_STATE_2_CLKSTOP_STATE = (0x1 << 3),
	MAX98927_IRQ_STATE_2_CLKSTART_STATE = (0x1 << 4),
	MAX98927_IRQ_STATE_2_MEASADC_END_STATE = (0x1 << 5),
	MAX98927_IRQ_STATE_2_PWRDN_DONE_STATE = (0x1 << 6),
	MAX98927_IRQ_STATE_2_PWRUP_DONE_STATE = (0x1 << 7),

	/* Interrupt State 3 (Address 0x0006) */
	MAX98927_IRQ_STATE_3 = 0x0006,
	MAX98927_IRQ_STATE_3_PWRUP_FAIL_STATE = (0x1 << 0),
	MAX98927_IRQ_STATE_3_AUTH_DONE_STATE = (0x1 << 1),
	MAX98927_IRQ_STATE_3_SPK_OVC_STATE = (0x1 << 2),
	MAX98927_IRQ_STATE_3_BST_UVLO_STATE = (0x1 << 3),

	/* Interrupt Flag 1 (Address 0x0007) */
	MAX98927_IRQ_FLAG_1 = 0x0007,
	MAX98927_IRQ_FLAG_1_BDE_ACTIVE_END_FLAG = (0x1 << 0),
	MAX98927_IRQ_FLAG_1_BDE_ACTIVE_BGN_FLAG = (0x1 << 1),
	MAX98927_IRQ_FLAG_1_BDE_LVL_CHANGE_FLAG = (0x1 << 2),
	MAX98927_IRQ_FLAG_1_BDE_L8_FLAG = (0x1 << 3),
	MAX98927_IRQ_FLAG_1_THERMWARN_END_FLAG = (0x1 << 4),
	MAX98927_IRQ_FLAG_1_THERMWARN_START_FLAG = (0x1 << 5),
	MAX98927_IRQ_FLAG_1_THERMSHDN_END_FLAG = (0x1 << 6),
	MAX98927_IRQ_FLAG_1_THERMSHDN_START_FLAG = (0x1 << 7),

	/* Interrupt Flag 2 (Address 0x0008) */
	MAX98927_IRQ_FLAG_2 = 0x0008,
	MAX98927_IRQ_FLAG_2_WATCHDOGWARN_FLAG = (0x1 << 0),
	MAX98927_IRQ_FLAG_2_WATCHDOGFAIL_FLAG = (0x1 << 1),
	MAX98927_IRQ_FLAG_2_BOOSTCURRLIM_FLAG = (0x1 << 2),
	MAX98927_IRQ_FLAG_2_CLKSTOP_FLAG = (0x1 << 3),
	MAX98927_IRQ_FLAG_2_CLKSTART_FLAG = (0x1 << 4),
	MAX98927_IRQ_FLAG_2_MEASADC_END_FLAG = (0x1 << 5),
	MAX98927_IRQ_FLAG_2_PWRDN_DONE_FLAG = (0x1 << 6),
	MAX98927_IRQ_FLAG_2_PWRUP_DONE_FLAG = (0x1 << 7),

	/* Interrupt Flag 3 (Address 0x0009) */
	MAX98927_IRQ_FLAG_3 = 0x0009,
	MAX98927_IRQ_FLAG_3_PWRUP_FAIL_FLAG = (0x1 << 0),
	MAX98927_IRQ_FLAG_3_AUTH_DONE_FLAG = (0x1 << 1),
	MAX98927_IRQ_FLAG_3_SPK_OVC_FLAG = (0x1 << 2),
	MAX98927_IRQ_FLAG_3_BST_UVLO_FLAG = (0x1 << 3),

	/* Interrupt Enable 1 (Address 0x000a) */
	MAX98927_IRQ_ENABLE_1 = 0x000A,
	MAX98927_IRQ_ENABLE_1_BDE_ACTIVE_END_EN = (0x1 << 0),
	MAX98927_IRQ_ENABLE_1_BDE_ACTIVE_BGN_EN = (0x1 << 1),
	MAX98927_IRQ_ENABLE_1_BDE_LVL_CHANGE_EN = (0x1 << 2),
	MAX98927_IRQ_ENABLE_1_BDE_L8_EN = (0x1 << 3),
	MAX98927_IRQ_ENABLE_1_THERMWARN_END_EN = (0x1 << 4),
	MAX98927_IRQ_ENABLE_1_THERMWARN_START_EN = (0x1 << 5),
	MAX98927_IRQ_ENABLE_1_THERMSHDN_END_EN = (0x1 << 6),
	MAX98927_IRQ_ENABLE_1_THERMSHDN_START_EN = (0x1 << 7),

	/* Interrupt Enable 2 (Address 0x000b) */
	MAX98927_IRQ_ENABLE_2 = 0x000B,
	MAX98927_IRQ_ENABLE_2_WATCHDOGWARN_EN = (0x1 << 0),
	MAX98927_IRQ_ENABLE_2_WATCHDOGFAIL_EN = (0x1 << 1),
	MAX98927_IRQ_ENABLE_2_BOOSTCURRLIM_EN = (0x1 << 2),
	MAX98927_IRQ_ENABLE_2_CLKSTOP_EN = (0x1 << 3),
	MAX98927_IRQ_ENABLE_2_CLKSTART_EN = (0x1 << 4),
	MAX98927_IRQ_ENABLE_2_MEASADC_END_EN = (0x1 << 5),
	MAX98927_IRQ_ENABLE_2_PWRDN_DONE_EN = (0x1 << 6),
	MAX98927_IRQ_ENABLE_2_PWRUP_DONE_EN = (0x1 << 7),

	/* Interrupt Enable 3 (Address 0x000c) */
	MAX98927_IRQ_ENABLE_3 = 0x000C,
	MAX98927_IRQ_ENABLE_3_PWRUP_FAIL_EN = (0x1 << 0),
	MAX98927_IRQ_ENABLE_3_AUTH_DONE_EN = (0x1 << 1),
	MAX98927_IRQ_ENABLE_3_SPK_OVC_EN = (0x1 << 2),
	MAX98927_IRQ_ENABLE_3_BST_UVLO_EN = (0x1 << 3),

	/* Interrupt Flag Clear 1 (Address 0x000d) */
	MAX98927_IRQ_FLAG_CLEAR_1 = 0x000D,
	MAX98927_IRQ_FLAG_CLEAR_1_BDE_ACTIVE_END_CLR = (0x1 << 0),
	MAX98927_IRQ_FLAG_CLEAR_1_BDE_ACTIVE_BGN_CLR = (0x1 << 1),
	MAX98927_IRQ_FLAG_CLEAR_1_BDE_LVL_CHANGE_CLR = (0x1 << 2),
	MAX98927_IRQ_FLAG_CLEAR_1_BDE_L8_CLR = (0x1 << 3),
	MAX98927_IRQ_FLAG_CLEAR_1_THERMWARN_END_CLR = (0x1 << 4),
	MAX98927_IRQ_FLAG_CLEAR_1_THERMWARN_START_CLR = (0x1 << 5),
	MAX98927_IRQ_FLAG_CLEAR_1_THERMSHDN_END_CLR = (0x1 << 6),
	MAX98927_IRQ_FLAG_CLEAR_1_THERMSHDN_START_CLR = (0x1 << 7),

	/* Interrupt Flag Clear 2 (Address 0x000e) */
	MAX98927_IRQ_FLAG_CLEAR_2 = 0x000E,
	MAX98927_IRQ_FLAG_CLEAR_2_WATCHDOGWARN_CLR = (0x1 << 0),
	MAX98927_IRQ_FLAG_CLEAR_2_WATCHDOGFAIL_CLR = (0x1 << 1),
	MAX98927_IRQ_FLAG_CLEAR_2_BOOSTCURRLIM_CLR = (0x1 << 2),
	MAX98927_IRQ_FLAG_CLEAR_2_CLKSTOP_CLR = (0x1 << 3),
	MAX98927_IRQ_FLAG_CLEAR_2_CLKSTART_CLR = (0x1 << 4),
	MAX98927_IRQ_FLAG_CLEAR_2_MEASADC_END_CLR = (0x1 << 5),
	MAX98927_IRQ_FLAG_CLEAR_2_PWRDN_DONE_CLR = (0x1 << 6),
	MAX98927_IRQ_FLAG_CLEAR_2_PWRUP_DONE_CLR = (0x1 << 7),

	/* Interrupt Flag Clear 3 (Address 0x000f) */
	MAX98927_IRQ_FLAG_CLEAR_3 = 0x000F,
	MAX98927_IRQ_FLAG_CLEAR_3_PWRUP_FAIL_CLR = (0x1 << 0),
	MAX98927_IRQ_FLAG_CLEAR_3_AUTH_DONE_CLR = (0x1 << 1),
	MAX98927_IRQ_FLAG_CLEAR_3_SPK_OVC_CLR = (0x1 << 2),
	MAX98927_IRQ_FLAG_CLEAR_3_BST_UVLO_CLR = (0x1 << 3),

	/* IRQ Control (Address 0x0010) */
	MAX98927_IRQ_CTRL = 0x0010,
	MAX98927_IRQ_CTRL_IRQ_EN = (0x1 << 0),
	MAX98927_IRQ_CTRL_IRQ_POL = (0x1 << 1),
	MAX98927_IRQ_CTRL_IRQ_MODE = (0x1 << 2),

	/* Clock monitor enable (Address 0x0011) */
	MAX98927_CLK_MONITOR_EN = 0x0011,
	MAX98927_CLK_MONITOR_EN_CMON_ENA = (0x1 << 0),
	MAX98927_CLK_MONITOR_EN_CMON_AUTORESTART_ENA = (0x1 << 1),

	/* Watchdog Control (Address 0x0012) */
	MAX98927_WATCHDOG_CTRL = 0x0012,
	MAX98927_WATCHDOG_CTRL_WDT_ENA = (0x1 << 0),
	MAX98927_WATCHDOG_CTRL_WDT_MODE = (0x1 << 1),
	MAX98927_WATCHDOG_CTRL_WDT_TO_SEL_MASK = (0x3 << 2),
	/*Specific_bit_values_goes_here */
	MAX98927_WATCHDOG_CTRL_WDT_TO_SEL_5 = (0x0 << 2),
	MAX98927_WATCHDOG_CTRL_WDT_TO_SEL_10 = (0x1 << 2),
	MAX98927_WATCHDOG_CTRL_WDT_TO_SEL_35 = (0x2 << 2),
	MAX98927_WATCHDOG_CTRL_WDT_TO_SEL_50 = (0x3 << 2),
	MAX98927_WATCHDOG_CTRL_WDT_HW_SRC = (0x1 << 4),

	/* Watchdog SW Reset (Address 0x0013) */
	MAX98927_WATCHDOG_SW_RESET = 0x0013,
	MAX98927_WATCHDOG_SW_RESET_WDT_SW_RST_MASK = (0xFF << 0),

	/* Meas ADC Thermal Warning Threshhold (Address 0x0014) */
	MAX98927_MEAS_ADC_THERMAL_WARN_THRES = 0x0014,
	MAX98927_MEAS_ADC_THERMAL_WARN_THRES_MASK = (0xFF << 0),

	/* Meas ADC Thermal Shutdown Threshhold (Address 0x0015) */
	MAX98927_MEAS_ADC_THERMAL_SHUTDOWN_THRES = 0x0015,
	MAX98927_MEAS_ADC_THERMAL_SHUTDOWN_THRES_MASK = (0xFF << 0),

	/* Meas ADC Thermal Hysteresis (Address 0x0016) */
	MAX98927_MEAS_ADC_THERMAL_HYSTERESIS = 0x0016,
	MAX98927_MEAS_ADC_THERMAL_HYSTERESIS_MASK = (0x1F << 0),

	/* Pin Config (Address 0x0017) */
	MAX98927_PIN_CFG = 0x0017,
	MAX98927_PIN_CFG_DOUT_DRV_MASK = (0x3 << 0),
	MAX98927_PIN_CFG_DOUT_DRV_01 = (0x0 << 0),
	MAX98927_PIN_CFG_DOUT_DRV_11 = (0x2 << 0),
	MAX98927_PIN_CFG_BCLK_DRV_MASK = (0x3 << 2),
	MAX98927_PIN_CFG_BCLK_DRV_01 = (0x0 << 2),
	MAX98927_PIN_CFG_BCLK_DRV_11 = (0x2 << 2),
	MAX98927_PIN_CFG_LRCLK_DRV_MASK = (0x3 << 4),
	MAX98927_PIN_CFG_LRCLK_DRV_01 = (0x0 << 4),
	MAX98927_PIN_CFG_LRCLK_DRV_11 = (0x2 << 4),
	MAX98927_PIN_CFG_ICC_DRV_MASK = (0x3 << 6),
	MAX98927_PIN_CFG_ICC_DRV_01 = (0x0 << 6),
	MAX98927_PIN_CFG_ICC_DRV_11 = (0x2 << 6),

	/* PCM Rx Enables A (Address 0x0018) */
	MAX98927_PCM_RX_ENABLES_A = 0x0018,
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH0_EN = (0x1 << 0),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH1_EN = (0x1 << 1),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH2_EN = (0x1 << 2),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH3_EN = (0x1 << 3),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH4_EN = (0x1 << 4),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH5_EN = (0x1 << 5),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH6_EN = (0x1 << 6),
	MAX98927_PCM_RX_ENABLES_A_PCM_RX_CH7_EN = (0x1 << 7),

	/* PCM Rx Enables B (Address 0x0019) */
	MAX98927_PCM_RX_ENABLES_B = 0x0019,
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH8_EN = (0x1 << 0),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH9_EN = (0x1 << 1),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH10_EN = (0x1 << 2),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH11_EN = (0x1 << 3),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH12_EN = (0x1 << 4),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH13_EN = (0x1 << 5),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH14_EN = (0x1 << 6),
	MAX98927_PCM_RX_ENABLES_B_PCM_RX_CH15_EN = (0x1 << 7),

	/* PCM Tx Enables A (Address 0x001a) */
	MAX98927_PCM_TX_ENABLES_A = 0x001A,
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH0_EN = (0x1 << 0),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH1_EN = (0x1 << 1),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH2_EN = (0x1 << 2),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH3_EN = (0x1 << 3),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH4_EN = (0x1 << 4),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH5_EN = (0x1 << 5),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH6_EN = (0x1 << 6),
	MAX98927_PCM_TX_ENABLES_A_PCM_TX_CH7_EN = (0x1 << 7),

	/* PCM Tx Enables B (Address 0x001b) */
	MAX98927_PCM_TX_ENABLES_B = 0x001B,
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH8_EN = (0x1 << 0),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH9_EN = (0x1 << 1),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH10_EN = (0x1 << 2),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH11_EN = (0x1 << 3),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH12_EN = (0x1 << 4),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH13_EN = (0x1 << 5),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH14_EN = (0x1 << 6),
	MAX98927_PCM_TX_ENABLES_B_PCM_TX_CH15_EN = (0x1 << 7),

	/* PCM Tx HiZ Control A (Address 0x001c) */
	MAX98927_PCM_TX_HIZ_CTRL_A = 0x001C,
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH0_HIZ = (0x1 << 0),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH1_HIZ = (0x1 << 1),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH2_HIZ = (0x1 << 2),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH3_HIZ = (0x1 << 3),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH4_HIZ = (0x1 << 4),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH5_HIZ = (0x1 << 5),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH6_HIZ = (0x1 << 6),
	MAX98927_PCM_TX_HIZ_CTRL_A_PCM_TX_CH7_HIZ = (0x1 << 7),

	/* PCM Tx HiZ Control B (Address 0x001d) */
	MAX98927_PCM_TX_HIZ_CTRL_B = 0x001D,
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH8_HIZ = (0x1 << 0),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH9_HIZ = (0x1 << 1),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH10_HIZ = (0x1 << 2),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH11_HIZ = (0x1 << 3),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH12_HIZ = (0x1 << 4),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH13_HIZ = (0x1 << 5),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH14_HIZ = (0x1 << 6),
	MAX98927_PCM_TX_HIZ_CTRL_B_PCM_TX_CH15_HIZ = (0x1 << 7),

	/* PCM Tx Channel Sources A (Address 0x001e) */
	MAX98927_PCM_TX_CHANNEL_SRCS_A = 0x001E,
	MAX98927_PCM_TX_CHANNEL_SRCS_A_V_DEST_MASK = (0xF << 0),
	MAX98927_PCM_TX_CHANNEL_SRCS_A_I_DEST_MASK = (0xF << 4),

	/* PCM Tx Channel Sources B (Address 0x001f) */
	MAX98927_PCM_TX_CHANNEL_SRCS_B = 0x001F,
	MAX98927_PCM_TX_CHANNEL_SRCS_B_PCM_AMP_MASK = (0xF << 0),

	/* PCM Mode Config (Address 0x0020) */
	MAX98927_PCM_MODE_CFG = 0x0020,
	MAX98927_PCM_MODE_CFG_PCM_TX_EXTRA_HIZ = (0x1 << 0),
	MAX98927_PCM_MODE_CFG_PCM_CHANSEL = (0x1 << 1),
	MAX98927_PCM_MODE_CFG_PCM_BCLKEDGE = (0x1 << 2),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_MASK = (0x7 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_I2S = (0x0 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_LEFT = (0x1 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_TDM_0 = (0x3 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_TDM_1 = (0x4 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_TDM_2 = (0x5 << 3),
	MAX98927_PCM_MODE_CFG_PCM_FORMAT_ = (0x6 << 3),
	MAX98927_PCM_MODE_CFG_PCM_CHANSZ_MASK = (0x3 << 6),
	MAX98927_PCM_MODE_CFG_PCM_CHANSZ_16 = (0x1 << 6),
	MAX98927_PCM_MODE_CFG_PCM_CHANSZ_24 = (0x2 << 6),
	MAX98927_PCM_MODE_CFG_PCM_CHANSZ_32 = (0x3 << 6),

	/* PCM Master Mode (Address 0x0021) */
	MAX98927_PCM_MASTER_MODE = 0x0021,
	MAX98927_PCM_MASTER_MODE_MCLK_RATE_SHIFT = 2,
	MAX98927_PCM_MASTER_MODE_MSTR_MODE_MASK = (0x3 << 0),
	MAX98927_PCM_MASTER_MODE_MSTR_MODE_SLAVE = (0x0 << 0),
	MAX98927_PCM_MASTER_MODE_MSTR_MODE_MASTER = (0x3 << 0),
	MAX98927_PCM_MASTER_MODE_MSTR_MODE_HYBRID = (0x1 << 0),
	MAX98927_PCM_MASTER_MODE_MCLK_RATE_MASK = (0xF << 2),
	MAX98927_PCM_MASTER_MODE_CLK_SRC = (0x1 << 6),

	/* PCM Clock setup (Address 0x0022) */
	MAX98927_PCM_CLOCK_SETUP = 0x0022,
	MAX98927_PCM_CLOCK_SETUP_PCM_BSEL_MASK = (0xF << 0),
	MAX98927_PCM_CLOCK_SETUP_PCM_MSEL_MASK = (0xF << 4),

	/* PCM Sample rate setup 1 (Address 0x0023) */
	MAX98927_PCM_SR_SETUP_1 = 0x0023,
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_MASK = (0xF << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_8000                   = (0x0 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_11025                   = (0x1 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_12000                   = (0x2 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_16000                   = (0x3 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_22050                   = (0x4 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_24000                   = (0x5 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_32000                   = (0x6 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_44100                   = (0x7 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_48000                   = (0x8 << 0),
	MAX98927_PCM_SR_SETUP_1_DIG_IF_SR_192000                  = (0xC << 0),

	/* PCM Sample rate setup 1 (Address 0x0024) */
	MAX98927_PCM_SR_SETUP_2 = 0x0024,
	MAX98927_PCM_SR_SETUP_2_IVADC_SR_MASK = (0xF << 0),
	MAX98927_PCM_SR_SETUP_2_SPK_SR_MASK = (0xF << 4),

	/* PCM to speaker monomix A (Address 0x0025) */
	MAX98927_PCM_TO_SPK_MONOMIX_A = 0x0025,
	MAX98927_PCM_TO_SPK_MONOMIX_A_CH0_SRC_MASK = (0xF << 0),
	MAX98927_PCM_TO_SPK_MONOMIX_A_CFG_MASK = (0x3 << 6),

	/* PCM to speaker monomix B (Address 0x0026) */
	MAX98927_PCM_TO_SPK_MONOMIX_B = 0x0026,
	MAX98927_PCM_TO_SPK_MONOMIX_B_CH1_SRC_MASK = (0xF << 0),

	/* ICC RX Enables A (Address 0x0027) */
	MAX98927_ICC_RX_ENABLES_A = 0x0027,
	MAX98927_ICC_RX_ENABLES_A_RX_CH0 = (0x1 << 0),
	MAX98927_ICC_RX_ENABLES_A_RX_CH1 = (0x1 << 1),
	MAX98927_ICC_RX_ENABLES_A_RX_CH2 = (0x1 << 2),
	MAX98927_ICC_RX_ENABLES_A_RX_CH3 = (0x1 << 3),
	MAX98927_ICC_RX_ENABLES_A_RX_CH4 = (0x1 << 4),
	MAX98927_ICC_RX_ENABLES_A_RX_CH5 = (0x1 << 5),
	MAX98927_ICC_RX_ENABLES_A_RX_CH6 = (0x1 << 6),
	MAX98927_ICC_RX_ENABLES_A_RX_CH7 = (0x1 << 7),

	/* ICC RX Enables B (Address 0x0028) */
	MAX98927_ICC_RX_ENABLES_B = 0x0028,
	MAX98927_ICC_RX_ENABLES_B_RX_CH8 = (0x1 << 0),
	MAX98927_ICC_RX_ENABLES_B_RX_CH9 = (0x1 << 1),
	MAX98927_ICC_RX_ENABLES_B_RX_CH10 = (0x1 << 2),
	MAX98927_ICC_RX_ENABLES_B_RX_CH11 = (0x1 << 3),
	MAX98927_ICC_RX_ENABLES_B_RX_CH12 = (0x1 << 4),
	MAX98927_ICC_RX_ENABLES_B_RX_CH13 = (0x1 << 5),
	MAX98927_ICC_RX_ENABLES_B_RX_CH14 = (0x1 << 6),
	MAX98927_ICC_RX_ENABLES_B_RX_CH15 = (0x1 << 7),

	/* ICC TX Enables A (Address 0x002b) */
	MAX98927_ICC_TX_ENABLES_A = 0x002B,
	MAX98927_ICC_TX_ENABLES_A_TX_CH0 = (0x1 << 0),
	MAX98927_ICC_TX_ENABLES_A_TX_CH1 = (0x1 << 1),
	MAX98927_ICC_TX_ENABLES_A_TX_CH2 = (0x1 << 2),
	MAX98927_ICC_TX_ENABLES_A_TX_CH3 = (0x1 << 3),
	MAX98927_ICC_TX_ENABLES_A_TX_CH4 = (0x1 << 4),
	MAX98927_ICC_TX_ENABLES_A_TX_CH5 = (0x1 << 5),
	MAX98927_ICC_TX_ENABLES_A_TX_CH6 = (0x1 << 6),
	MAX98927_ICC_TX_ENABLES_A_TX_CH7 = (0x1 << 7),

	/* ICC TX Enables B (Address 0x002c) */
	MAX98927_ICC_TX_ENABLES_B = 0x002C,
	MAX98927_ICC_TX_ENABLES_B_TX_CH8 = (0x1 << 0),
	MAX98927_ICC_TX_ENABLES_B_TX_CH9 = (0x1 << 1),
	MAX98927_ICC_TX_ENABLES_B_TX_CH10 = (0x1 << 2),
	MAX98927_ICC_TX_ENABLES_B_TX_CH11 = (0x1 << 3),
	MAX98927_ICC_TX_ENABLES_B_TX_CH12 = (0x1 << 4),
	MAX98927_ICC_TX_ENABLES_B_TX_CH13 = (0x1 << 5),
	MAX98927_ICC_TX_ENABLES_B_TX_CH14 = (0x1 << 6),
	MAX98927_ICC_TX_ENABLES_B_TX_CH15 = (0x1 << 7),

	/* ICC HiZ Manual Mode (Address 0x002e) */
	MAX98927_ICC_HIZ_MANUAL_MODE = 0x002E,
	MAX98927_ICC_HIZ_MANUAL_MODE_TX_MANUAL = (0x1 << 0),
	MAX98927_ICC_HIZ_MANUAL_MODE_TX_EXTRA = (0x1 << 1),

	/* ICC TX HiZ Enables A (Address 0x002f) */
	MAX98927_ICC_TX_HIZ_ENABLES_A = 0x002F,
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH0 = (0x1 << 0),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH1 = (0x1 << 1),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH2 = (0x1 << 2),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH3 = (0x1 << 3),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH4 = (0x1 << 4),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH5 = (0x1 << 5),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH6 = (0x1 << 6),
	MAX98927_ICC_TX_HIZ_ENABLES_A_TX_CH7 = (0x1 << 7),

	/* ICC TX HiZ Enables B (Address 0x0030) */
	MAX98927_ICC_TX_HIZ_ENABLES_B = 0x0030,
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH8 = (0x1 << 0),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH9 = (0x1 << 1),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH10 = (0x1 << 2),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH11 = (0x1 << 3),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH12 = (0x1 << 4),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH13 = (0x1 << 5),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH14 = (0x1 << 6),
	MAX98927_ICC_TX_HIZ_ENABLES_B_TX_CH15 = (0x1 << 7),

	/* ICC Link Enables (Address 0x0031) */
	MAX98927_ICC_LINK_ENABLES = 0x0031,
	MAX98927_ICC_LINK_ENABLES_ICC_LINK_EN = (0x1 << 1),

	/* PDM Tx Enables (Address 0x0032) */
	MAX98927_PDM_TX_ENABLES = 0x0032,
	MAX98927_PDM_TX_ENABLES_PDM_TX_EN = (0x1 << 0),
	MAX98927_PDM_TX_ENABLES_PDM_TX_CLK_DIV2 = (0x1 << 1),

	/* PDM Tx HiZ Control (Address 0x0033) */
	MAX98927_PDM_TX_HIZ_CTRL = 0x0033,
	MAX98927_PDM_TX_HIZ_CTRL_PDM_TX_HIZ = (0x1 << 0),

	/* PDM Tx Control (Address 0x0034) */
	MAX98927_PDM_TX_CTRL = 0x0034,
	MAX98927_PDM_TX_CTRL_PDM_TX_CH0_SRC = (0x1 << 0),
	MAX98927_PDM_TX_CTRL_PDM_TX_CH1_SRC = (0x1 << 1),

	/* PDM Rx Enable (Address 0x0034) */
	MAX98927_PDM_RX_ENABLE = 0x0035,
	MAX98927_PDM_RX_ENABLE_PDM_RX_EN = (0x1 << 0),
	MAX98927_PDM_RX_ENABLE_PDM_DSP_EN = (0x1 << 1),
	MAX98927_PDM_RX_ENABLE_PDM_DITH_EN = (0x1 << 2),
	MAX98927_PDM_RX_ENABLE_PDM_RX_CH_SEL = (0x1 << 3),
	MAX98927_PDM_RX_ENABLE_PDM_FIFO_RDY_LVL_MASK = (0xF << 4),

	/* AMP volume control (Address 0x0036) */
	MAX98927_AMP_VOLUME_CTRL = 0x0036,
	MAX98927_AMP_VOLUME_CTRL_AMP_VOL_MASK = (0x7F << 0),
	MAX98927_AMP_VOLUME_CTRL_AMP_VOL_SEL = (0x1 << 7),

	/* AMP DSP Config (Address 0x0037) */
	MAX98927_AMP_DSP_CFG = 0x0037,
	MAX98927_AMP_DSP_CFG_AMP_DCBLK_EN = (0x1 << 0),
	MAX98927_AMP_DSP_CFG_AMP_DITH_EN = (0x1 << 1),
	MAX98927_AMP_DSP_CFG_DAC_HALF_REF_CURRENT = (0x1 << 2),
	MAX98927_AMP_DSP_CFG_DAC_DOUBLE_RFB = (0x1 << 3),
	MAX98927_AMP_DSP_CFG_AMP_VOL_RMP_BYPASS = (0x1 << 4),
	MAX98927_AMP_DSP_CFG_DAC_INVERT = (0x1 << 5),

	/* Tone Generator and DC Config (Address 0x0038) */
	MAX98927_TONE_GENERATOR_AND_DC_CFG = 0x0038,
	MAX98927_TONE_GENERATOR_AND_DC_CFG_MASK = (0xF << 0),

	/* DRE Control (Address 0x0039) */
	MAX98927_DRE_CTRL = 0x0039,
	MAX98927_DRE_CTRL_DRE_SHIFT = 0x1,
	MAX98927_DRE_CTRL_DRE_EN = (0x1 << 0),

	/* AMP enables (Address 0x003a) */
	MAX98927_AMP_ENABLES = 0x003A,
	MAX98927_AMP_ENABLES_SPK_EN = (0x1 << 0),

	/* Speaker source select (Address 0x003b) */
	MAX98927_SPK_SRC_SELECT = 0x003B,
	MAX98927_SPK_SRC_SELECT_SPK_SRC_MASK = (0x3 << 0),
	MAX98927_SPK_SRC_SELECT_SPK_SRC_01 = (0x0 << 0),
	MAX98927_SPK_SRC_SELECT_SPK_SRC_11 = (0x2 << 0),

	/* Speaker Gain (Address 0x003c) */
	MAX98927_SPK_GAIN = 0x003C,
	MAX98927_SPK_GAIN_SPK_PDM_GAIN_SHIFT = 4,
	MAX98927_SPK_GAIN_SPK_PDM_GAIN_MASK = (0x7 << 4),
	MAX98927_SPK_GAIN_SPK_PCM_GAIN_MASK = (0x7 << 0),

	/* SSM Configuration (Address 0x003d) */
	MAX98927_SSM_CONFIGURATION = 0x003D,
	MAX98927_SSM_CONFIGURATION_SSM_MOD_INDEX_MASK = (0x7 << 0),
	MAX98927_SSM_CONFIGURATION_SPK_FSW_SEL = (0x1 << 3),
	MAX98927_SSM_CONFIGURATION_SSM_ENA = (0x1 << 7),

	/* Measurement enables (Address 0x003e) */
	MAX98927_MEAS_ENABLES = 0x003E,
	MAX98927_MEAS_ENABLES_IVADC_V_EN = (0x1 << 0),
	MAX98927_MEAS_ENABLES_IVADC_I_EN = (0x1 << 1),
	MAX98927_MEAS_ENABLES_IVADC_VI_EN = (0x3 << 0),

	/* Measurement DSP Config (Address 0x003f) */
	MAX98927_MEAS_DSP_CFG = 0x003F,
	MAX98927_MEAS_DSP_CFG_MEAS_V_DCBLK_EN = (0x1 << 0),
	MAX98927_MEAS_DSP_CFG_MEAS_I_DCBLK_EN = (0x1 << 1),
	MAX98927_MEAS_DSP_CFG_MEAS_DITH_EN = (0x1 << 2),
	MAX98927_MEAS_DSP_CFG_MEAS_V_DCBLK_MASK = (0x3 << 4),
	MAX98927_MEAS_DSP_CFG_MEAS_I_DCBLK_MASK = (0x3 << 6),

	/* Boost Control 0 (Address 0x0040) */
	MAX98927_BST_CTRL_0 = 0x0040,
	MAX98927_BST_CTRL_0_BST_VOUT_MASK = (0x1F << 0),
	MAX98927_BST_CTRL_0_EXT_PVDD_EN = (0x1 << 7),

	/* Boost Control 3 (Address 0x0041) */
	MAX98927_BST_CTRL_3 = 0x0041,
	MAX98927_BST_CTRL_3_BST_SKIPLOAD_MASK = (0x3 << 0),
	MAX98927_BST_CTRL_3_BST_PHASE_MASK = (0x7 << 2),
	MAX98927_BST_CTRL_3_BST_SLOWSTART = (0x1 << 5),

	/* Boost Control 1 (Address 0x0042) */
	MAX98927_BST_CTRL_1 = 0x0042,
	MAX98927_BST_CTRL_1_BST_ILIM_MASK = (0x3F << 0),

	/* Meas ADC Config (Address 0x0043) */
	MAX98927_MEAS_ADC_CFG = 0x0043,
	MAX98927_MEAS_ADC_CFG_MEAS_ADC_CH0_EN = (0x1 << 0),
	MAX98927_MEAS_ADC_CFG_MEAS_ADC_CH1_EN = (0x1 << 1),
	MAX98927_MEAS_ADC_CFG_MEAS_ADC_CH2_EN = (0x1 << 2),

	/* Meas ADC Base Divide MSByte (Address 0x0044) */
	MAX98927_MEAS_ADC_BASE_DIVIDE_MSBYTE = 0x0044,
	MAX98927_MEAS_ADC_BASE_DIVIDE_MSBYTE_MASK = (0xFF << 0),

	/* Meas ADC Base Divide LSByte (Address 0x0045) */
	MAX98927_MEAS_ADC_BASE_DIVIDE_LSBYTE = 0x0045,
	MAX98927_MEAS_ADC_BASE_DIVIDE_LSBYTE_MASK = (0xFF << 0),

	/* Meas ADC Chan 0 Divide (Address 0x0046) */
	MAX98927_MEAS_ADC_CH0_DIVIDE = 0x0046,
	MAX98927_MEAS_ADC_CH0_DIVIDE_MASK = (0xFF << 0),

	/* Meas ADC Chan 1 Divide (Address 0x0047) */
	MAX98927_MEAS_ADC_CH1_DIVIDE = 0x0047,
	MAX98927_MEAS_ADC_CH1_DIVIDE_MASK = (0xFF << 0),

	/* Meas ADC Chan 2 Divide (Address 0x0048) */
	MAX98927_MEAS_ADC_CH2_DIVIDE = 0x0048,
	MAX98927_MEAS_ADC_CH2_DIVIDE_MASK = (0xFF << 0),

	/* Meas ADC Chan 0 Filt Config (Address 0x0049) */
	MAX98927_MEAS_ADC_CH0_FILT_CFG = 0x0049,
	MAX98927_MEAS_ADC_CH0_FILT_CFG_AVG_MASK = (0x7 << 0),
	MAX98927_MEAS_ADC_CH0_FILT_CFG_FILT_EN = (0x1 << 3),

	/* Meas ADC Chan 1 Filt Config (Address 0x004a) */
	MAX98927_MEAS_ADC_CH1_FILT_CFG = 0x004A,
	MAX98927_MEAS_ADC_CH1_FILT_CFG_AVG_MASK = (0x7 << 0),
	MAX98927_MEAS_ADC_CH1_FILT_CFG_FILT_EN = (0x1 << 3),

	/* Meas ADC Chan 2 Filt Config (Address 0x004b) */
	MAX98927_MEAS_ADC_CH2_FILT_CFG = 0x004B,
	MAX98927_MEAS_ADC_CH2_FILT_CFG_AVG_MASK = (0x7 << 0),
	MAX98927_MEAS_ADC_CH2_FILT_CFG_FILT_EN = (0x1 << 3),

	/* Meas ADC Chan 0 Readback (Address 0x004c) */
	MAX98927_MEAS_ADC_CH0_READBACK = 0x004C,
	MAX98927_MEAS_ADC_CH0_READBACK_MASK = (0xFF << 0),

	/* Meas ADC Chan 1 Readback (Address 0x004d) */
	MAX98927_MEAS_ADC_CH1_READBACK = 0x004D,
	MAX98927_MEAS_ADC_CH1_READBACK_MASK = (0xFF << 0),

	/* Meas ADC Chan 2 Readback (Address 0x004e) */
	MAX98927_MEAS_ADC_CH2_READBACK = 0x004E,
	MAX98927_MEAS_ADC_CH2_READBACK_MASK = (0xFF << 0),

	/* Brownout status (Address 0x0051) */
	MAX98927_BROWNOUT_STATUS = 0x0051,
	MAX98927_BROWNOUT_STATUS_MASK = (0xF << 0),

	/* Brownout enables (Address 0x0052) */
	MAX98927_BROWNOUT_ENABLES = 0x0052,
	MAX98927_BROWNOUT_ENABLES_BDE_EN = (0x1 << 0),
	MAX98927_BROWNOUT_ENABLES_BDE_AMP_EN = (0x1 << 1),
	MAX98927_BROWNOUT_ENABLES_AMP_DSP_EN = (0x1 << 2),

	/* Brownout level infinite hold (Address 0x0053) */
	MAX98927_BROWNOUT_LVL_INF_HOLD = 0x0053,
	MAX98927_BROWNOUT_LVL_INF_HOLD_L4 = (0x1 << 1),

	/* Brownout level infinite hold clear (Address 0x0054) */
	MAX98927_BROWNOUT_LVL_INF_HOLD_CLEAR = 0x0054,
	MAX98927_BROWNOUT_LVL_INF_HOLD_CLEAR_L4 = (0x1 << 1),

	/* Brownout level hold (Address 0x0055) */
	MAX98927_BROWNOUT_LVL_HOLD = 0x0055,
	MAX98927_BROWNOUT_LVL_HOLD_MASK = (0xFF << 0),

	/* Brownout level 1 threshold (Address 0x0056) */
	MAX98927_BROWNOUT_LVL_1_THRES = 0x0056,
	MAX98927_BROWNOUT_LVL_1_THRES_MASK = (0xFF << 0),

	/* Brownout level 2 threshold (Address 0x0057) */
	MAX98927_BROWNOUT_LVL_2_THRES = 0x0057,
	MAX98927_BROWNOUT_LVL_2_THRES_MASK = (0xFF << 0),

	/* Brownout level 3 threshold (Address 0x0058) */
	MAX98927_BROWNOUT_LVL_3_THRES = 0x0058,
	MAX98927_BROWNOUT_LVL_3_THRES_MASK = (0xFF << 0),

	/* Brownout level 4 threshold (Address 0x0059) */
	MAX98927_BROWNOUT_LVL_4_THRES = 0x0059,
	MAX98927_BROWNOUT_LVL_4_THRES_MASK = (0xFF << 0),

	/* Brownout level 5 threshold (Address 0x005a) */
	MAX98927_BROWNOUT_LVL_5_THRES = 0x005A,
	MAX98927_BROWNOUT_LVL_5_THRES_MASK = (0xFF << 0),

	/* Brownout level 6 threshold (Address 0x005b) */
	MAX98927_BROWNOUT_LVL_6_THRES = 0x005B,
	MAX98927_BROWNOUT_LVL_6_THRES_MASK = (0xFF << 0),

	/* Brownout level 7 threshold (Address 0x005c) */
	MAX98927_BROWNOUT_LVL_7_THRES = 0x005C,
	MAX98927_BROWNOUT_LVL_7_THRES_MASK = (0xFF << 0),

	/* Brownout level 8 threshold (Address 0x005d) */
	MAX98927_BROWNOUT_LVL_8_THRES = 0x005D,
	MAX98927_BROWNOUT_LVL_8_THRES_MASK = (0xFF << 0),

	/* Brownout threshold hysterysis (Address 0x005e) */
	MAX98927_BROWNOUT_THRES_HYST = 0x005E,
	MAX98927_BROWNOUT_THRES_HYST_MASK = (0xFF << 0),

	/* Brownout AMP limiter attack/release (Address 0x005f) */
	MAX98927_BROWNOUT_AMP_LIM_ATK_REL = 0x005F,
	MAX98927_BROWNOUT_AMP_LIM_ATK_SHIFT = 4,
	MAX98927_BROWNOUT_AMP_LIM_ATK_MASK = (0xF << 4),
	MAX98927_BROWNOUT_AMP_LIM_RLS_MASK = (0xF << 0),

	/* Brownout AMP gain attack/release (Address 0x0060) */
	MAX98927_BROWNOUT_AMP_GAIN_ATK_REL = 0x0060,
	MAX98927_BROWNOUT_AMP_GAIN_ATK_MASK = (0xF << 4),
	MAX98927_BROWNOUT_AMP_GAIN_RLS_MASK = (0xF << 0),

	/* Brownout AMP1 clip mode (Address 0x0061) */
	MAX98927_BROWNOUT_AMP1_CLIP_MODE = 0x0061,
	MAX98927_BROWNOUT_AMP1_CLIP_MODE_MODE = (0x1 << 0),

	/* Brownout level 1 current limit (Address 0x0062) */
	MAX98927_BROWNOUT_LVL_1_CURRENT_LIMIT = 0x0062,
	MAX98927_BROWNOUT_LVL_1_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 1 amp 1 control 1 (Address 0x0063) */
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_1 = 0x0063,
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 1 amp 1 control 2 (Address 0x0064) */
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_2 = 0x0064,
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 1 amp 1 control 3 (Address 0x0065) */
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_3 = 0x0065,
	MAX98927_BROWNOUT_LVL_1_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 2 current limit (Address 0x0066) */
	MAX98927_BROWNOUT_LVL_2_CURRENT_LIMIT = 0x0066,
	MAX98927_BROWNOUT_LVL_2_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 2 amp 1 control 1 (Address 0x0067) */
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_1 = 0x0067,
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 2 amp 1 control 2 (Address 0x0068) */
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_2 = 0x0068,
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 2 amp 1 control 3 (Address 0x0069) */
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_3 = 0x0069,
	MAX98927_BROWNOUT_LVL_2_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 3 current limit (Address 0x006a) */
	MAX98927_BROWNOUT_LVL_3_CURRENT_LIMIT = 0x006A,
	MAX98927_BROWNOUT_LVL_3_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 3 amp 1 control 1 (Address 0x006b) */
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_1 = 0x006B,
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 3 amp 1 control 2 (Address 0x006c) */
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_2 = 0x006C,
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 3 amp 1 control 3 (Address 0x006d) */
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_3 = 0x006D,
	MAX98927_BROWNOUT_LVL_3_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 4 current limit (Address 0x006e) */
	MAX98927_BROWNOUT_LVL_4_CURRENT_LIMIT = 0x006E,
	MAX98927_BROWNOUT_LVL_4_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 4 amp 1 control 1 (Address 0x006f) */
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_1 = 0x006F,
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 4 amp 1 control 2 (Address 0x0070) */
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_2 = 0x0070,
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 4 amp 1 control 3 (Address 0x0071) */
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_3 = 0x0071,
	MAX98927_BROWNOUT_LVL_4_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 5 current limit (Address 0x0072) */
	MAX98927_BROWNOUT_LVL_5_CURRENT_LIMIT = 0x0072,
	MAX98927_BROWNOUT_LVL_5_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 5 amp 1 control 1 (Address 0x0073) */
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_1 = 0x0073,
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 5 amp 1 control 2 (Address 0x0074) */
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_2 = 0x0074,
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 5 amp 1 control 3 (Address 0x0075) */
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_3 = 0x0075,
	MAX98927_BROWNOUT_LVL_5_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 6 current limit (Address 0x0076) */
	MAX98927_BROWNOUT_LVL_6_CURRENT_LIMIT = 0x0076,
	MAX98927_BROWNOUT_LVL_6_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 6 amp 1 control 1 (Address 0x0077) */
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_1 = 0x0077,
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 6 amp 1 control 2 (Address 0x0078) */
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_2 = 0x0078,
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 6 amp 1 control 3 (Address 0x0079) */
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_3 = 0x0079,
	MAX98927_BROWNOUT_LVL_6_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 7 current limit (Address 0x007a) */
	MAX98927_BROWNOUT_LVL_7_CURRENT_LIMIT = 0x007A,
	MAX98927_BROWNOUT_LVL_7_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 7 amp 1 control 1 (Address 0x007b) */
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_1 = 0x007B,
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 7 amp 1 control 2 (Address 0x007c) */
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_2 = 0x007C,
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_2_MASK = (0x3F << 0),

	/* Brownout level 7 amp 1 control 3 (Address 0x007d) */
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_3 = 0x007D,
	MAX98927_BROWNOUT_LVL_7_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Brownout level 8 current limit (Address 0x007e) */
	MAX98927_BROWNOUT_LVL_8_CURRENT_LIMIT = 0x007E,
	MAX98927_BROWNOUT_LVL_8_CURRENT_LIMIT_MASK = (0x3F << 0),

	/* Brownout level 8 amp 1 control 1 (Address 0x007f) */
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_1 = 0x007F,
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_1_MASK = (0xF << 0),

	/* Brownout level 8 amp 1 control 2 (Address 0x0080) */
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_2 = 0x0080,
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_2_MASK = (0x3F << 0),
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_2_MUTE = (0x1 << 7),

	/* Brownout level 8 amp 1 control 3 (Address 0x0081) */
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_3 = 0x0081,
	MAX98927_BROWNOUT_LVL_8_AMP_1_CTRL_3_MASK = (0x3F << 0),

	/* Env Tracker Vout Headroom (Address 0x0082) */
	MAX98927_ENV_TRK_VOUT_HEADROOM = 0x0082,
	MAX98927_ENV_TRK_VOUT_HEADROOM_MASK = (0x1F << 0),

	/* Env Tracker Boost Vout Delay (Address 0x0083) */
	MAX98927_ENV_TRK_BST_VOUT_DELAY = 0x0083,
	MAX98927_ENV_TRK_BST_VOUT_DELAY_MASK = (0x1F << 0),
	MAX98927_ENV_TRK_BST_VOUT_DELAY_MODE = (0x1 << 7),

	/* Env Tracker Release Rate (Address 0x0084) */
	MAX98927_ENV_TRK_REL_RATE = 0x0084,
	MAX98927_ENV_TRK_REL_RATE_MASK = (0x7 << 0),
	MAX98927_ENV_TRK_REL_RATE_10MS = (0x0 << 0),
	MAX98927_ENV_TRK_REL_RATE_250MS = (0x2 << 0),
	MAX98927_ENV_TRK_REL_RATE_750MS = (0x4 << 0),
	MAX98927_ENV_TRK_REL_RATE_1500MS = (0x6 << 0),
	MAX98927_ENV_TRK_PEAK_DET_LPF_BYP_EN = (0x1 << 3),
	MAX98927_ENV_TRK_REL_RATE_SCALE_MASK = (0x3 << 4),
	MAX98927_ENV_TRK_REL_RATE_SCALE_2X_FASTER = (0x0 << 4),
	MAX98927_ENV_TRK_REL_RATE_SCALE_4X_SLOWER = (0x2 << 4),

	/* Env Tracker Hold Rate (Address 0x0085) */
	MAX98927_ENV_TRK_HOLD_RATE = 0x0085,
	MAX98927_ENV_TRK_HOLD_RATE_MASK = (0x7 << 0),
	MAX98927_ENV_TRK_HOLD_RATE_10MS = (0x0 << 0),
	MAX98927_ENV_TRK_HOLD_RATE_100MS = (0x2 << 0),
	MAX98927_ENV_TRK_HOLD_RATE_500MS = (0x4 << 0),
	MAX98927_ENV_TRK_HOLD_RATE_1000MS = (0x6 << 0),

	/* Env Tracker Control (Address 0x0086) */
	MAX98927_ENV_TRK_CTRL = 0x0086,
	MAX98927_ENV_TRK_CTRL_ENV_TRK_EN = (0x1 << 0),

	/* Env Tracker Boost Vout ReadBack (Address 0x0087) */
	MAX98927_ENV_TRK_BST_VOUT_READBACK = 0x0087,
	MAX98927_ENV_TRK_BST_VOUT_READBACK_MASK = (0x1F << 0),

	/* Advanced Settings (Address 0x0089) */
	MAX98927_ADVANCED_SETTINGS = 0x0089,
	MAX98927_ADVANCED_SETTINGS_DAC_HALF_FIR = (0x1 << 0),
	MAX98927_ADVANCED_SETTINGS_PDM_MOD_SEL = (0x1 << 1),
	MAX98927_ADVANCED_SETTINGS_ISOCH_EN = (0x1 << 2),

	/* DAC Test 1 (Address 0x009f) */
	MAX98927_DAC_TEST_1 = 0x009F,
	MAX98927_DAC_TEST_1_DAC_PCM_TIMING = (0x1 << 0),
	MAX98927_DAC_TEST_1_DAC_HALFI_AMP = (0x1 << 1),
	MAX98927_DAC_TEST_1_DAC_LONG_HOLD = (0x1 << 3),
	MAX98927_DAC_TEST_1_DAC_DISABLE_CHOP = (0x1 << 4),
	MAX98927_DAC_TEST_1_DAC_TM = (0x1 << 5),
	MAX98927_DAC_TEST_1_DAC_INVERT_DACCLK = (0x1 << 6),

	/* Authentication key 0 (Address 0x00ea) */
	MAX98927_AUTHENTICATION_KEY_0 = 0x00EA,
	MAX98927_AUTHENTICATION_KEY_0_MASK = (0xFF << 0),

	/* Authentication key 1 (Address 0x00eb) */
	MAX98927_AUTHENTICATION_KEY_1 = 0x00EB,
	MAX98927_AUTHENTICATION_KEY_1_MASK = (0xFF << 0),

	/* Authentication key 2 (Address 0x00ec) */
	MAX98927_AUTHENTICATION_KEY_2 = 0x00EC,
	MAX98927_AUTHENTICATION_KEY_2_MASK = (0xFF << 0),

	/* Authentication key 3 (Address 0x00ed) */
	MAX98927_AUTHENTICATION_KEY_3 = 0x00ED,
	MAX98927_AUTHENTICATION_KEY_3_MASK = (0xFF << 0),

	/* Authentication enable (Address 0x00ee) */
	MAX98927_AUTHENTICATION_ENABLE = 0x00EE,
	MAX98927_AUTHENTICATION_ENABLE_AUTH_EN = (0x1 << 0),

	/* Authentication result 0 (Address 0x00ef) */
	MAX98927_AUTHENTICATION_RESULT_0 = 0x00EF,
	MAX98927_AUTHENTICATION_RESULT_0_MASK = (0xFF << 0),

	/* Authentication result 1 (Address 0x00f0) */
	MAX98927_AUTHENTICATION_RESULT_1 = 0x00F0,
	MAX98927_AUTHENTICATION_RESULT_1_MASK = (0xFF << 0),

	/* Authentication result 2 (Address 0x00f1) */
	MAX98927_AUTHENTICATION_RESULT_2 = 0x00F1,
	MAX98927_AUTHENTICATION_RESULT_2_MASK = (0xFF << 0),

	/* Authentication result 3 (Address 0x00f2) */
	MAX98927_AUTHENTICATION_RESULT_3 = 0x00F2,
	MAX98927_AUTHENTICATION_RESULT_3_MASK = (0xFF << 0),

	/* Authentication result 4 (Address 0x00f3) */
	MAX98927_AUTHENTICATION_RESULT_4 = 0x00F3,
	MAX98927_AUTHENTICATION_RESULT_4_MASK = (0xFF << 0),

	/* Authentication result 5 (Address 0x00f4) */
	MAX98927_AUTHENTICATION_RESULT_5 = 0x00F4,
	MAX98927_AUTHENTICATION_RESULT_5_MASK = (0xFF << 0),

	/* Authentication result 6 (Address 0x00f5) */
	MAX98927_AUTHENTICATION_RESULT_6 = 0x00F5,
	MAX98927_AUTHENTICATION_RESULT_6_MASK = (0xFF << 0),

	/* Authentication result 7 (Address 0x00f6) */
	MAX98927_AUTHENTICATION_RESULT_7 = 0x00F6,
	MAX98927_AUTHENTICATION_RESULT_7_MASK = (0xFF << 0),

	/* Authentication result 8 (Address 0x00f7) */
	MAX98927_AUTHENTICATION_RESULT_8 = 0x00F7,
	MAX98927_AUTHENTICATION_RESULT_8_MASK = (0xFF << 0),

	/* Authentication result 9 (Address 0x00f8) */
	MAX98927_AUTHENTICATION_RESULT_9 = 0x00F8,
	MAX98927_AUTHENTICATION_RESULT_9_MASK = (0xFF << 0),

	/* Authentication result 10 (Address 0x00f9) */
	MAX98927_AUTHENTICATION_RESULT_10 = 0x00F9,
	MAX98927_AUTHENTICATION_RESULT_10_MASK = (0xFF << 0),

	/* Authentication result 11 (Address 0x00fa) */
	MAX98927_AUTHENTICATION_RESULT_11 = 0x00FA,
	MAX98927_AUTHENTICATION_RESULT_11_MASK = (0xFF << 0),

	/* Authentication result 12 (Address 0x00fb) */
	MAX98927_AUTHENTICATION_RESULT_12 = 0x00FB,
	MAX98927_AUTHENTICATION_RESULT_12_MASK = (0xFF << 0),

	/* Authentication result 13 (Address 0x00fc) */
	MAX98927_AUTHENTICATION_RESULT_13 = 0x00FC,
	MAX98927_AUTHENTICATION_RESULT_13_MASK = (0xFF << 0),

	/* Authentication result 14 (Address 0x00fd) */
	MAX98927_AUTHENTICATION_RESULT_14 = 0x00FD,
	MAX98927_AUTHENTICATION_RESULT_14_MASK = (0xFF << 0),

	/* Authentication result 15 (Address 0x00fe) */
	MAX98927_AUTHENTICATION_RESULT_15 = 0x00FE,
	MAX98927_AUTHENTICATION_RESULT_15_MASK = (0xFF << 0),

	/* Global Enable (Address 0x00ff) */
	MAX98927_GLOBAL_ENABLE = 0x00FF,
	MAX98927_GLOBAL_ENABLE_EN = (0x1 << 0),

	/* Software Reset (Address 0x0100) */
	MAX98927_SOFTWARE_RESET = 0x0100,
	MAX98927_SOFTWARE_RESET_RST = (0x1 << 0),

	/* REV ID (Address 0x01ff) */
	MAX98927_REV_ID = 0x01FF,
	MAX98927_REV_ID_REV_ID_MASK = (0xFF << 0),
};

/* MAX98927 volume step */
enum volume_step {
	MAX98927_VSTEP_0 = 0,
	MAX98927_VSTEP_1,
	MAX98927_VSTEP_2,
	MAX98927_VSTEP_3,
	MAX98927_VSTEP_4,
	MAX98927_VSTEP_5,
	MAX98927_VSTEP_6,
	MAX98927_VSTEP_7,
	MAX98927_VSTEP_8,
	MAX98927_VSTEP_9,
	MAX98927_VSTEP_10,
	MAX98927_VSTEP_11,
	MAX98927_VSTEP_12,
	MAX98927_VSTEP_13,
	MAX98927_VSTEP_14,
	MAX98927_VSTEP_15,
	MAX98927_VSTEP_MAX,
};

/* MAX98927 one stop mode */
enum one_stop_mode {
	MAX98927_OSM_MONO_L = 0,
	MAX98927_OSM_MONO_R,
	MAX98927_OSM_RCV_L,
	MAX98927_OSM_RCV_R,
	MAX98927_OSM_STEREO,
	MAX98927_OSM_STEREO_MODE2,
	MAX98927_OSM_MAX,
};

#ifdef CONFIG_SND_SOC_MAXIM_DSM_CAL
extern struct class *g_class;
#else
struct class *g_class;
#endif /* CONFIG_SND_SOC_MAXIM_DSM_CAL */

struct max98927_volume_step_info {
	int length;
	int vol_step;
	int adc_thres;
	int boost_step[MAX98927_VSTEP_MAX];
	bool adc_status;
};

struct max98927_pc_active {
	u32 capture_active;
	u32 playback_active:1;
};

#ifdef CONFIG_SND_SOC_MAXIM_DSM
#define MAX98927_PINFO_SZ	PARAM_OFFSET_MAX
#else
#define MAX98927_PINFO_SZ	6
#endif /* CONFIG_SND_SOC_MAXIM_DSM */

struct max98927_pdata {
	uint32_t pinfo[MAX98927_PINFO_SZ];
	const uint32_t *reg_arr;
	uint32_t reg_arr_len;
	uint32_t boostv;
	int osm;
	bool nodsm;
};

struct max98927_priv {
	struct device *i2c_dev;
	struct regmap *regmap_l;
	struct regmap *regmap_r;
	struct regmap *regmap;
	struct snd_soc_codec *codec;
	struct max98927_pdata *pdata;
	struct max98927_pc_active pca;
	struct max98927_volume_step_info vstep;
#if defined(USE_DSM_LOG) || defined(USE_DSM_UPDATE_CAL)
	struct class *class;
	struct device *dev;
#endif /* USE_DSM_LOG */
#ifdef CONFIG_MACH_LGE
	unsigned int reset_gpio;
#endif
	unsigned int spk_gain;
	unsigned int sysclk;
	unsigned int v_l_slot;
	unsigned int i_l_slot;
	unsigned int v_r_slot;
	unsigned int i_r_slot;
	bool mono_stereo;
	bool interleave;
	unsigned int ch_size;
	unsigned int rate;
	unsigned int iface;
	unsigned int master;
	unsigned int thres_hyste;
	unsigned int level5_hold;
	unsigned int level6_hold;
	unsigned int level7_hold;
	unsigned int level8_hold;
	unsigned int amp_limit;
	unsigned int amp_limit_rel;
	unsigned int amp1_level;
	unsigned int amp2_level;
	unsigned int amp3_level;
	unsigned int amp1_level8;
	unsigned int amp2_level8;
	unsigned int amp3_level8;
	unsigned int amp1_level7;
	unsigned int amp2_level7;
	unsigned int amp3_level7;
	unsigned int amp1_level6;
	unsigned int amp2_level6;
	unsigned int amp3_level6;
	unsigned int amp1_level5;
	unsigned int amp2_level5;
	unsigned int amp3_level5;
	unsigned int digital_gain;
	unsigned int pdm_gain;
	unsigned int level_hold;
};

#define MAX98927_GLOBAL_SHIFT 0
#define M98927_DAI_MSEL_SHIFT 4
#define M98927_DAI_BSEL_SHIFT 0
#define M98927_DAI_BSEL_32 (2 << M98927_DAI_BSEL_SHIFT)
#define M98927_DAI_BSEL_48 (3 << M98927_DAI_BSEL_SHIFT)
#define M98927_DAI_BSEL_64 (4 << M98927_DAI_BSEL_SHIFT)
#define M98927_DAI_MSEL_32 (2 << M98927_DAI_MSEL_SHIFT)
#define M98927_DAI_MSEL_48 (3 << M98927_DAI_MSEL_SHIFT)
#define M98927_DAI_MSEL_64 (4 << M98927_DAI_MSEL_SHIFT)
#define MAX98927_SPK_GAIN_WIDTH 3
#define MAX98927_SPK_RMP_EN_SHIFT 4
#define MAX98927_PDM_GAIN_SHIFT 4
#define MAX98927_PDM_GAIN_WIDTH 3
#define MAX98927_AMP_VOL_WIDTH 7
#define MAX98927_AMP_VOL_LOCATION_SHIFT 7
#define MAX98927_PDM_RX_ENABLE_PDM_CH_SHIFT 3
#define MAX98927_PCM_TO_SPEAKER_MONOMIX_A_SHIFT 6
#define MAX98927_PCM_SAMPLE_RATE_SETUP_2_DIG_IF_SR_48000 (0x8 << 4)
#define MAX98927_PCM_FORMAT_DSP_A (0x3 << 3)
#define MAX98927_BDE_DSP_SHIFT 2
#define MAX98927_BDE_AMP_SHIFT 1

#endif /* __MAX98927_REGISTERDEFS_H */
